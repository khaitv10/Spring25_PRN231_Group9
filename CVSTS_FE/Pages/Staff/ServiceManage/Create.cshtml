@page
@model CVSTS_FE.Pages.Staff.ServiceManage.CreateModel

@{
    ViewData["Title"] = "Create Service";
    Layout = "~/Pages/Shared/_LayoutStaff.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Create New Service</h4>
        </div>
        <div class="card-body">
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <div class="mb-3">
                    <label asp-for="Service.Name" class="form-label fw-bold">Service Name</label>
                    <input asp-for="Service.Name" class="form-control" placeholder="Enter service name" />
                    <span asp-validation-for="Service.Name" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Service.Description" class="form-label fw-bold">Description</label>
                    <textarea asp-for="Service.Description" class="form-control" rows="3" placeholder="Enter service description"></textarea>
                    <span asp-validation-for="Service.Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Service.Price" class="form-label fw-bold">Price (VND)</label>
                    <input asp-for="Service.Price" type="number" class="form-control" placeholder="Enter price" />
                    <span asp-validation-for="Service.Price" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-bold">Vaccines</label>
                    <div id="vaccineContainer" class="mb-2">
                        <!-- Vaccine selection will be added dynamically here -->
                    </div>

                    

                    <button type="button" class="btn btn-outline-primary" onclick="addVaccine()">
                        <i class="bi bi-plus-circle"></i> Add Vaccine
                    </button>
                </div>

                <div class="mt-4">
                    <button type="submit" class="btn btn-success"><i class="bi bi-check-lg"></i> Create</button>
                    <a asp-page="Index" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let vaccineOptions = @Html.Raw(Json.Serialize(ViewBag.Vaccine));
        let vaccineCount = 0;

        function addVaccine() {
            let container = document.getElementById("vaccineContainer");

            let div = document.createElement("div");
            div.classList.add("input-group", "mb-2");

            // Dropdown for vaccine selection
            let select = document.createElement("select");
            select.classList.add("form-select");
            select.name = `Service.Vaccines[${vaccineCount}].Key`;

            vaccineOptions.forEach(v => {
                let option = document.createElement("option");
                option.value = v.value;
                option.text = v.text;
                select.appendChild(option);
            });

            // Validation message placeholder (above the input)
            let validationMessage = document.createElement("span");
            validationMessage.classList.add("text-danger", "d-block", "mb-1"); // Add Bootstrap classes for spacing
            validationMessage.setAttribute("data-valmsg-for", `Service.Vaccines[${vaccineCount}].Value`);
            validationMessage.setAttribute("data-valmsg-replace", "true");

            // Input for doses
            let input = document.createElement("input");
            input.type = "number";
            input.classList.add("form-control");
            input.name = `Service.Vaccines[${vaccineCount}].Value`;
            input.placeholder = "Doses";
            input.required = true; // Client-side validation
            input.min = 1; // Ensure dose must be positive

            // Custom validation message
            input.oninput = function () {
                if (input.value < 1) {
                    input.setCustomValidity("Number of doses must be positive.");
                } else {
                    input.setCustomValidity(""); // Clear validation message
                }
            };

            // Remove button
            let removeBtn = document.createElement("button");
            removeBtn.type = "button";
            removeBtn.classList.add("btn", "btn-danger");
            removeBtn.innerHTML = '<i class="bi bi-trash"></i>';
            removeBtn.onclick = function () {
                container.removeChild(div);
            };

            // Append elements in the desired order
            div.appendChild(select);
            div.appendChild(input);
            div.appendChild(removeBtn);
            div.appendChild(validationMessage);

            container.appendChild(div);

            // Reinitialize validation for the form
            let form = document.querySelector("form");
            $.validator.unobtrusive.parse(form);

            vaccineCount++;
        }
    </script>
}
